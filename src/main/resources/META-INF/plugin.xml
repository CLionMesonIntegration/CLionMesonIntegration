<idea-plugin>
    <idea-version since-build="201" until-build="201.*"/>
    <id>com.non.null.dinu.MesonIntegration</id>
    <name>CLion Meson Integration</name>
    <vendor email="dinu.blanovschi@criptext.com" url="http://www.github.com/NonNullDinu/CLionMesonIntegration">
        NonNullDinu
    </vendor>

    <description>
        <![CDATA[
        This plugin attempts to deliver cmake-like integration for meson in CLion.
        ]]>
    </description>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.cidr.lang</depends>
    <depends>com.intellij.modules.clion</depends>

    <project-components>
        <component>
            <implementation-class>com.nonnulldinu.clionmeson.project.MesonWorkspace</implementation-class>
        </component>
    </project-components>

    <extensions defaultExtensionNs="com.intellij">
        <fileType name="Meson Build" implementationClass="com.nonnulldinu.clionmeson.filetypes.MesonBuildFileType"
                  language="MesonBuildLang" fileNames="meson.build"/>

        <lang.parserDefinition language="MesonBuildLang"
                               implementationClass="com.nonnulldinu.clionmeson.languages.parsers.MesonBuildParserDefinition"/>
        <lang.syntaxHighlighterFactory language="MesonBuildLang"
                                       implementationClass="com.nonnulldinu.clionmeson.mesonbuildlang.language.highlighting.MesonBuildSyntaxHighlighterFactory"/>

        <!-- Completions
        Disabled because they don't work as expected
        -->
        <completion.contributor language="MesonBuildLang"
                                implementationClass="com.nonnulldinu.clionmeson.mesonbuildlang.language.completions.MesonBuildCompletionContributor"/>

        <!-- Project Creation -->
        <directoryProjectGenerator implementation="com.nonnulldinu.clionmeson.project.MesonProjectGeneratorC"/>
        <directoryProjectGenerator implementation="com.nonnulldinu.clionmeson.project.MesonProjectGeneratorCPP"/>

        <!-- Run Configurations -->
        <!-- Old intellij -->
        <!--        <stepsBeforeRunProvider-->
        <!--                        implementation="com.nonnulldinu.clionmeson.runconfigurations.intellij.MesonCompileTaskProvider"-->
        <!--                        id="MesonCompileTaskProviderId"/>-->
        <!--        <configurationType implementation="com.nonnulldinu.clionmeson.runconfigurations.intellij.MesonConfigurationType"/>-->

        <!-- CLion -->
        <stepsBeforeRunProvider
                implementation="com.nonnulldinu.clionmeson.runconfigurations.clion.CLionMesonCompileTaskProvider"
                id="MesonCompileTaskProviderId"/>
        <configurationType
                implementation="com.nonnulldinu.clionmeson.runconfigurations.clion.CLionMesonConfigurationType"/>

        <!-- Error Handling -->
        <errorHandler implementation="com.nonnulldinu.clionmeson.errorHandler.ErrorSubmitter"/>

        <!-- Settings -->
        <applicationService serviceImplementation="com.nonnulldinu.clionmeson.settings.MesonPluginSettingsState"/>
        <applicationConfigurable parentId="build"
                                 instance="com.nonnulldinu.clionmeson.settings.MesonPluginSettingsConfigurable"
                                 id="com.nonnulldinu.clionmeson.settings.MesonPluginSettingsConfigurable"
                                 displayName="Meson"/>
        <projectOpenProcessor implementation="com.nonnulldinu.clionmeson.project.MesonProjectOpenProcessor"/>
    </extensions>

    <extensions defaultExtensionNs="cidr">
        <project.workspaceProvider implementation="com.nonnulldinu.clionmeson.project.MesonWorkspaceProvider"
                                   order="first"/>
    </extensions>

    <extensions defaultExtensionNs="clion">
        <buildConfigurationProvider
                implementation="com.nonnulldinu.clionmeson.runconfigurations.clion.CLionMesonBuildConfigurationProvider"/>
    </extensions>

    <!-- Project listeners -->
    <projectListeners>
        <listener class="com.nonnulldinu.clionmeson.project.MesonProjectListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </projectListeners>

    <actions>
        <action class="com.nonnulldinu.clionmeson.errorHandler.TriggerErrorAction"/>
    </actions>
</idea-plugin>